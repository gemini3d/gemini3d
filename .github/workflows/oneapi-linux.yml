name: oneapi-linux

env:
  CC: icx
  CXX: icpx
  FC: ifx
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml
  CTEST_NO_TESTS_ACTION: error
  CMAKE_BUILD_TYPE: Release
  CTEST_PARALLEL_LEVEL: 0
  CMAKE_GENERATOR: Ninja
  # oneAPI Debug triggers asan errors on Linux in general on any project
  CMAKE_INSTALL_PREFIX: ~/libs
  CMAKE_PREFIX_PATH: ~/libs

on:
  push:
    paths-ignore:
      - ".github/workflows/ci_macos.yml"
      - ".github/workflows/ci.yml"
      - "docs/**"
      - "cmake/cray.cmake"
  workflow_dispatch:

# avoid wasted runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        oneapi: [2025.2]
    #     hwm14: [true, false]

    steps:

    - uses: actions/checkout@v5
    # this must be before oneAPI script commands else the scripts do not exist on the image

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v4
      with:
        path: |
          /opt/intel/oneapi
        key: oneapi-${{ matrix.oneapi }}-apt

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 8
      # 5 minutes times out sometimes
      run: |
        sh -c .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install --no-install-recommends \
          intel-oneapi-compiler-fortran-${{ matrix.oneapi }} \
          intel-oneapi-compiler-dpcpp-cpp-${{ matrix.oneapi }} \
          intel-oneapi-mpi \
          intel-oneapi-mpi-devel \
          intel-oneapi-mkl-${{ matrix.oneapi }} \
          intel-oneapi-mkl-devel-${{ matrix.oneapi }}

    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: CMake Configure
      run: cmake --preset default

    - name: Upload log failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: oneapi-${{ matrix.oneapi }}-${{ runner.os }}-CMakeConfigureLog.yaml
        path: build/CMakeFiles/CMakeConfigureLog.yaml

    - name: build
      run: cmake --build --preset default

    - name: build failed
      if: ${{ failure() }} && ${{ hashFiles('build/build.ninja') != '' }}
      run: cmake --build --preset default -j1 -v

    - name: unit test
      run: ctest --preset default -L unit

    # - name: RELEASE build
    #   run: cmake --build --preset release
    # - name: RELEASE unit test
    #   run: ctest --preset release -L unit
    # - name: RELEASE test core
    #   run: ctest --preset release -LE unit -E 3d

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: sh -c .github/workflows/oneapi_cache_exclude_linux.sh
